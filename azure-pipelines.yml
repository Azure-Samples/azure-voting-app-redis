# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: 
  displayName: Provision Infra
  jobs:
  - job: Terraform
    displayName: Terraform
    pool: Self-hosted
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'
    - task: CmdLine@2
      inputs:
        script: |
          cd $(System.DefaultWorkingDirectory)/infra/terraform/eks
          terraform init
          terraform plan -var-file="$(System.DefaultWorkingDirectory)/infra/terraform/eks/demo.tfvars"
    - task: CmdLine@2
      inputs:
        script: |
          cd $(System.DefaultWorkingDirectory)/infra/terraform/eks
          terraform apply -var-file="$(System.DefaultWorkingDirectory)/infra/terraform/eks/demo.tfvars"

- stage: BuildAndPush
  displayName: Build & Push image
  jobs:
  - job: Build
    displayName: Build
    pool: Self-hosted
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        repository: 'azure-vote'
        dockerfile: 'azure-vote/Dockerfile'
        tags: |
          $(tag)
    - task: ECRPushImage@1
      inputs:
        awsCredentials: 'aws-wellszhang'
        regionName: 'ap-southeast-2'
        imageSource: 'imagename'
        sourceImageName: 'azure-vote'
        sourceImageTag: '$(tag)'
        repositoryName: 'azure-vote'
        pushTag: '$(tag)'
        autoCreateRepository: true
        
- stage: 
  displayName: Deploy Service
  jobs:
  - job: DeploySvc
    displayName: Deploy Service to EKS
    pool: Self-hosted
    steps:
    - task: AWSCLI@1
      displayName: update-kubeconfig
      inputs:
        awsCredentials: 'aws-wellszhang'
        regionName: 'ap-southeast-2'
        awsCommand: 'eks'
        awsSubCommand: 'update-kubeconfig'
        awsArguments: '--region ap-southeast-2 --name eks-demo-VUNDtza6'       

    - task: Kubernetes@1
      displayName: kubectl get service
      inputs:
        connectionType: 'None'
        namespace: 'kube-system'
        command: 'get'
        arguments: 'svc'
        
    - task: Kubernetes@1
      displayName: kubectl apply
      inputs:
        connectionType: 'None'
        namespace: 'default'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(System.DefaultWorkingDirectory)/azure-vote-all-in-one-redis.yaml'
        outputFormat: 'yaml'
