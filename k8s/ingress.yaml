apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/service-upstream: "true"
  name: azure-vote-front
  namespace: default
spec:
  rules:
  - host: predscaling01.natzkalabs.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: azure-vote-front
            port:
              number: 80
  tls:
    - hosts:
      - predscaling01.natzkalabs.com
      secretName: predscaling01-tls

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-stack-kube-prom-nginx
  namespace: monitoring
  labels:
    app: nginx-ingress
spec:
  endpoints:
  - interval: 10s
    port: metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
  namespaceSelector:
    matchNames:
    - ingress

---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: prometheus-azure-vote-back
  namespace: default
spec:
  scaleTargetRef:
    name: azure-vote-back
  pollingInterval: 15
  cooldownPeriod:  30
  minReplicaCount: 1
  maxReplicaCount: 10
  advanced:
    # restoreToOriginalReplicaCount: true
    horizontalPodAutoscalerConfig:
      behavior:
        scaleDown:
          stabilizationWindowSeconds: 30
          # policies:
          # - type: Percent
          #   value: 100
          #   periodSeconds: 15
  triggers:
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-stack-kube-prom-prometheus.monitoring.svc.cluster.local:9090
      metricName: number_of_requests
      threshold: '1'
      query: sum(rate(nginx_ingress_controller_nginx_process_connections[1m]))
  - type: cpu
    metadata:
      type: AverageValue
      value: "300m"
  # - type: memory
  #   metadata:
  #     type: AverageValue
  #     value: "75"
  

# --- 
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     # nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
#     # nginx.ingress.kubernetes.io/configuration-snippet: |
#     #   rewrite ^(/grafana)$ $1/ redirect;
#   name: grafana
#   namespace: monitoring
# spec:
#   rules:
#     - host: predscaling01.natzkalabs.com
#       http:
#         paths:
#           - path: /grafana(/|$)(.*)
#             pathType: Prefix
#             backend:
#               service:
#                 name: grafana
#                 port:
#                   number: 80
#   tls:
#     - hosts:
#       - predscaling01.natzkalabs.com
#       secretName: dpredscaling01-tls


# --- 
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     # nginx.ingress.kubernetes.io/ssl-redirect: "true"
#     # nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/rewrite-target: /prometheus/$1
#   name: prometheus
#   namespace: monitoring
# spec:
#   rules:
#     - host: predscaling01.natzkalabs.com
#       http:
#         paths:
#           - path: /prometheus
#             pathType: Prefix
#             backend:
#               service:
#                 name: prometheus-server
#                 port:
#                   number: 80
#   tls:
#     - hosts:
#       - predscaling01.natzkalabs.com
#       secretName: predscaling01-tls